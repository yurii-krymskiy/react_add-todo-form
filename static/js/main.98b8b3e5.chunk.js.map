{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","components/PostForm/PostForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","completed","id","title","TodoList","todos","map","item","username","getUser","userId","usersFromServer","find","PostForm","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","setUserId","action","method","event","preventDefault","htmlFor","type","value","placeholder","onChange","target","disabled","App","todosList","setTodosList","todoList","data","newTodo","Math","max","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98b8b3e5.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user?.email}`}\n  >\n    {user?.name}\n  </a>\n);\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    className={(todo.completed\n      ? 'TodoInfo TodoInfo--completed'\n      : 'TodoInfo')}\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    <UserInfo user={(!todo.user) ? null : todo.user} />\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(item => (\n      <TodoInfo\n        key={item.id}\n        todo={item}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const PostForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [userId, setUserId] = useState(0);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleReset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    });\n\n    handleReset();\n  };\n\n  return (\n    <form\n      action=\"./api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <label htmlFor=\"title\">Title: </label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        id=\"title\"\n        value={title}\n        data-cy=\"titleInput\"\n        placeholder=\"Enter a title\"\n        onChange={handleTitleChange}\n      />\n\n      {hasTitleError && <span className=\"error\">Please enter a title</span>}\n\n      <br />\n\n      <label htmlFor=\"users\">User: </label>\n      <select\n        name=\"users\"\n        id=\"users\"\n        value={userId}\n        data-cy=\"userSelect\"\n        onChange={handleUserIdChange}\n      >\n        <option value=\"0\" disabled>Choose a user</option>\n        {usersFromServer.map(user => (\n          <option value={user.id} key={user.id}>\n            {user.name}\n          </option>\n        ))}\n      </select>\n\n      {hasUserIdError && <span className=\"error\">Please choose a user</span>}\n\n      <br />\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { PostForm } from './components/PostForm/PostForm';\nimport { getUser } from './services/user';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nfunction getNewTodoId(todoList: Todo[]) {\n  const maxId = Math.max(...todoList.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>(todos);\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: id || getNewTodoId(todosList),\n      ...data,\n    };\n\n    setTodosList(currentList => [...currentList, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <PostForm onSubmit={addTodo} />\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}